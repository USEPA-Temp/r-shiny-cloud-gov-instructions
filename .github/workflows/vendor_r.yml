on:
  [push]

jobs:
  download_and_vendor_dependencies:
    runs-on: ubuntu-latest
    name: Compile and vendor R dependencies for cloud.gov
    defaults:
      run:
        working-directory: /workspace
    container:
      image: cloudfoundry/cflinuxfs4
      volumes: 
       - ${{ github.workspace }}:/workspace

    steps:    
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: cflinux4

    - name: Setup Git
      run: |
        git config --global --add safe.directory $(realpath .)
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: 4.2.2

    - name: Download dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        packages: |
          stringr
          devtools

    - name: List R dependencies
      run: |
        sed -n -e 's/^.*- name: //p' r.yml | tr -d '\015' | sed -n -e 'H;${x;s/\n/,/g;s/^,//;p;}' | xargs echo packs= >> $GITHUB_ENV

    - name: Download R packages except sf
      run: |
        if [ -d "vendor_r" ]; then rm -fr vendor_r; fi
        Rscript scripts/download_packages.R vendor_r/src/contrib ${{ env.packs }} >> $GITHUB_ENV

    - name: Add build requirements for sf dependencies
      if: ${{ env.has_sf }} == TRUE
      run: |
        sudo apt-get -y update
        sudo apt --purge autoremove libmariadb-dev libmariadb-dev-compat
        sudo apt-get install -y libssl-dev libudunits2-dev libgdal-dev gdal-bin libgeos-dev libproj-dev libsqlite3-dev 

    - name: Build sf package binary
      if: ${{ env.has_sf }} == TRUE
      run: |
        Rscript scripts/build_sf.R
        cd vendor_r/src/contrib
        find -name 'sf_*' -print0 | sed -ze "p;s/\_R_x86_64-pc-linux-gnu//" | xargs -0 -n2 mv
        cd ../../..

    - name: Run lib_tar.sh to extract each of the libraries needed by sf
      if: ${{ env.has_sf }} == TRUE
      run: |
        if [ -d "r-lib" ]; then rm -fr r-lib; fi
        mkdir r-lib
        chmod +x scripts/lib_tar.sh
        for L in $LIBS
        do
          find / -iname $L 2>/dev/null | xargs -I {} scripts/lib_tar.sh {}
        done
        git add r-lib
      env:
        LIBS: libudunits2.so.0 libgeos_c.so libproj.so.12 proj.db libgdal.so.20 libsqlite3.so.0

    - name: Write package descriptions
      run: |
        Rscript scripts/write_descriptions.R 

    - name: Add additional files to repo if not already there
      run: |
        if [ ! test -f "manifest*.yml" ]; 
          then cp scripts/include/manifest.yml .
          git add manifest.yml
        fi
        if [ ! test -f ".cfignore" ]; 
          then cp scripts/include/.cfignore .
          git add .cfignore
        fi
        if [ ! test -f "shiny.R" ]; 
          then cp scripts/include/shiny.R .
          git add shiny.R
        fi

    - name: Commit & Push
      if: ${{ success() }}
      run: |
        git add vendor_r
        git commit -m "Automated workflow from GitHub Actions to vendor R dependencies"
        git push
